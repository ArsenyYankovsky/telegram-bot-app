service: telegram

provider:
  name: aws
  stage: prod
  region: eu-central-1
  memorySize: 512
  timeout: 30
  runtime: nodejs8.10
  tracing: false
  environment:
    GOOGLE_CX_TOKEN: ${env:GOOGLE_CX_TOKEN, file(./config.json):GOOGLE_CX_TOKEN}
    GOOGLE_SEARCH_TOKEN: ${env:GOOGLE_SEARCH_TOKEN, file(./config.json):GOOGLE_SEARCH_TOKEN}
    OPENWEATHERMAP_TOKEN: ${env:OPENWEATHERMAP_TOKEN, file(./config.json):OPENWEATHERMAP_TOKEN}
    TOKEN: ${env:TOKEN, file(./config.json):TOKEN}
    TRANSLATION_APP_TOKEN: ${env:TRANSLATION_APP_TOKEN, file(./config.json):TRANSLATION_APP_TOKEN}
    YOUTUBE_TOKEN: ${env:YOUTUBE_TOKEN, file(./config.json):YOUTUBE_TOKEN}
    IS_LOCAL: ${env:IS_LOCAL}
    region: eu-central-1
  iamRoleStatements:
  - Effect: Allow
    Action:
    - xray:PutTraceSegments
    - xray:PutTelemetryRecords
    - lambda:InvokeFunction
    - lambda:InvokeAsync
    - logs:*
    Resource:
    - '*'
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource:
    - arn:aws:dynamodb:*:*:table/chat-statistics
    - arn:aws:dynamodb:*:*:table/chat-events

package:
  exclude:
  - node_modules/**/*
  - .idea/**
  - .git/**
  - node.exe
  - yarn.lock

functions:
  telegram-bot:
    handler: src/index.handler
    events:
    - http:
        path: /
        method: post
    - http:
        path: /
        method: get
    - schedule:
        rate: cron(0 7,9,11,13,15,17 ? * MON-FRI *)
        enabled: true
        input:
          message:
            text: /c
            chat:
              id: -1001111472139.0

plugins:
- serverless-webpack
- serverless-offline
- serverless-plugin-tracing

resources:
  Resources:
    ChatStatisticsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: chat-statistics
        AttributeDefinitions:
        - AttributeName: chatId
          AttributeType: S
        KeySchema:
        - AttributeName: chatId
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    ChatEventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: chat-events
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: date
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn:
      - ChatStatisticsTable
      - ChatEventsTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            Resource:
            - arn:aws:dynamodb:*:*:table/chat-statistics
            - arn:aws:dynamodb:*:*:table/chat-events
        Roles:
        - Ref: IamRoleLambdaExecution
